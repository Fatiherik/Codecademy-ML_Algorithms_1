{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red164\green191\blue255;\red23\green23\blue23;\red255\green255\blue255;
\red252\green115\blue96;\red117\green255\blue242;\red254\green219\blue112;\red129\green131\blue134;}
{\*\expandedcolortbl;;\cssrgb\c70196\c80000\c100000;\cssrgb\c11765\c11765\c11765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c100000\c53725\c45098;\cssrgb\c51373\c100000\c96078;\cssrgb\c100000\c87843\c51373;\cssrgb\c57647\c58431\c59608;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \'97
\f1\fs28\fsmilli14080 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 def warn\cf4 \strokec4 (*\cf5 \strokec5 args\cf4 \strokec4 , **\cf5 \strokec5 kwargs\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 pass\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 warnings\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 warnings\cf4 \strokec4 .\cf6 \strokec6 warn\cf4 \strokec4  = \cf5 \strokec5 warn\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 pandas\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 pd\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 model_selection\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 train_test_split\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 tree\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 ensemble\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 RandomForestClassifier\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 income_data\cf4 \strokec4 =\cf5 \strokec5 pd\cf4 \strokec4 .\cf6 \strokec6 read_csv\cf4 \strokec4 (\cf7 \strokec7 'income.csv'\cf4 \strokec4 , \cf5 \strokec5 delimiter\cf4 \strokec4 =\cf7 \strokec7 ', '\cf4 \strokec4 , \cf5 \strokec5 header\cf4 \strokec4 =\cf5 \strokec5 0\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf8 \cb3 \strokec8 #print(income_data.iloc[0])\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 income_data\cf4 \strokec4 [\cf7 \strokec7 "sex-int"\cf4 \strokec4 ] = \cf5 \strokec5 income_data\cf4 \strokec4 [\cf7 \strokec7 "sex"\cf4 \strokec4 ].\cf6 \strokec6 apply\cf4 \strokec4 (\cf2 \strokec2 lambda\cf4 \strokec4  \cf5 \strokec5 row\cf4 \strokec4 : \cf5 \strokec5 0\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  \cf5 \strokec5 row\cf4 \strokec4  == \cf7 \strokec7 "Male"\cf4 \strokec4  \cf2 \strokec2 else\cf4 \strokec4  \cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf8 \cb3 \strokec8 #print(income_data["native-country"].value_counts())\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 income_data\cf4 \strokec4 [\cf7 \strokec7 "country-int"\cf4 \strokec4 ] = \cf5 \strokec5 income_data\cf4 \strokec4 [\cf7 \strokec7 "native-country"\cf4 \strokec4 ].\cf6 \strokec6 apply\cf4 \strokec4 (\cf2 \strokec2 lambda\cf4 \strokec4  \cf5 \strokec5 row\cf4 \strokec4 : \cf5 \strokec5 0\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  \cf5 \strokec5 row\cf4 \strokec4  == \cf7 \strokec7 "United-States"\cf4 \strokec4  \cf2 \strokec2 else\cf4 \strokec4  \cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 labels\cf4 \strokec4 =\cf5 \strokec5 income_data\cf4 \strokec4 [[\cf7 \strokec7 'income'\cf4 \strokec4 ]]\cb1 \
\cf5 \cb3 \strokec5 data\cf4 \strokec4 =\cf5 \strokec5 income_data\cf4 \strokec4 [[\cf7 \strokec7 "age"\cf4 \strokec4 , \cf7 \strokec7 "capital-gain"\cf4 \strokec4 , \cf7 \strokec7 "capital-loss"\cf4 \strokec4 , \cf7 \strokec7 "hours-per-week"\cf4 \strokec4 ,\cf7 \strokec7 'sex-int'\cf4 \strokec4 ,\cf7 \strokec7 'country-int'\cf4 \strokec4 ]]\cb1 \
\
\cf5 \cb3 \strokec5 train_data\cf4 \strokec4 , \cf5 \strokec5 test_data\cf4 \strokec4 , \cf5 \strokec5 train_labels\cf4 \strokec4 , \cf5 \strokec5 test_labels\cf4 \strokec4 =\cf5 \strokec5 train_test_split\cf4 \strokec4 (\cf5 \strokec5 data\cf4 \strokec4 ,\cf5 \strokec5 labels\cf4 \strokec4 ,\cf5 \strokec5 random_state\cf4 \strokec4 =\cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 forest\cf4 \strokec4 =\cf5 \strokec5 RandomForestClassifier\cf4 \strokec4 (\cf5 \strokec5 random_state\cf4 \strokec4 =\cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 forest\cf4 \strokec4 .\cf6 \strokec6 fit\cf4 \strokec4 (\cf5 \strokec5 train_data\cf4 \strokec4 ,\cf5 \strokec5 train_labels\cf4 \strokec4 )\
print(forest.predict(test_data))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf5 \strokec5 forest\cf4 \strokec4 .\cf6 \strokec6 feature_importances_\cf4 \strokec4 )			datadaki s\'fctunlar\uc0\u305 n  onem derecelerini veriyor\cb1 \
\cb3 print(\cf5 \strokec5 forest\cf4 \strokec4 .\cf6 \strokec6 score\cf4 \strokec4 (\cf5 \strokec5 test_data\cf4 \strokec4 ,\cf5 \strokec5 test_labels\cf4 \strokec4 ))\cb1 \
(}