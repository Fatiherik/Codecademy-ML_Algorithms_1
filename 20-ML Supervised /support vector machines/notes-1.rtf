{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red164\green191\blue255;\red23\green23\blue23;\red255\green255\blue255;
\red252\green115\blue96;\red117\green255\blue242;\red129\green131\blue134;\red254\green219\blue112;\red56\green56\blue56;
\red17\green16\blue23;\red229\green227\blue232;}
{\*\expandedcolortbl;;\cssrgb\c70196\c80000\c100000;\cssrgb\c11765\c11765\c11765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c100000\c53725\c45098;\cssrgb\c51373\c100000\c96078;\cssrgb\c57647\c58431\c59608;\cssrgb\c100000\c87843\c51373;\cssrgb\c28235\c28235\c28235;
\cssrgb\c8235\c7843\c12157;\cssrgb\c91765\c91373\c92941;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \'97
\f1\fs28\fsmilli14080 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 codecademylib3_seaborn\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 matplotlib\cf4 \strokec4 .\cf6 \strokec6 pyplot\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 plt\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 numpy\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 np\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 graph\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 ax\cf4 \strokec4 , \cf5 \strokec5 x_1\cf4 \strokec4 , \cf5 \strokec5 y_1\cf4 \strokec4 , \cf5 \strokec5 x_2\cf4 \strokec4 , \cf5 \strokec5 y_2\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 \strokec7 #Top graph intercept and slope\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 intercept_one\cf4 \strokec4  = \cf5 \strokec5 8\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 slope_one\cf4 \strokec4  = \cf5 \strokec5 -2\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 x_vals\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 (\cf5 \strokec5 ax\cf4 \strokec4 .\cf6 \strokec6 get_xlim\cf4 \strokec4 ())\cb1 \
\cf5 \cb3 \strokec5 y_vals\cf4 \strokec4  = \cf5 \strokec5 intercept_one\cf4 \strokec4  + \cf5 \strokec5 slope_one\cf4 \strokec4  * \cf5 \strokec5 x_vals\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 plot\cf4 \strokec4 (\cf5 \strokec5 x_vals\cf4 \strokec4 , \cf5 \strokec5 y_vals\cf4 \strokec4 , \cf8 \strokec8 '-'\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 \strokec7 #Bottom Graph\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 ax\cf4 \strokec4  = \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 subplot\cf4 \strokec4 (\cf5 \strokec5 2\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 2\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 title\cf4 \strokec4 (\cf8 \strokec8 'Good Decision Boundary'\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 ax\cf4 \strokec4 .\cf6 \strokec6 set_xlim\cf4 \strokec4 (\cf5 \strokec5 0\cf4 \strokec4 , \cf5 \strokec5 10\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 ax\cf4 \strokec4 .\cf6 \strokec6 set_ylim\cf4 \strokec4 (\cf5 \strokec5 0\cf4 \strokec4 , \cf5 \strokec5 10\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf5 \strokec5 x_1\cf4 \strokec4 , \cf5 \strokec5 y_1\cf4 \strokec4 , \cf5 \strokec5 color\cf4 \strokec4  = \cf8 \strokec8 "b"\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf5 \strokec5 x_2\cf4 \strokec4 , \cf5 \strokec5 y_2\cf4 \strokec4 , \cf5 \strokec5 color\cf4 \strokec4  = \cf8 \strokec8 "r"\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 \strokec7 #Change the intercept to separate the clusters\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 intercept_two\cf4 \strokec4  = \cf5 \strokec5 16\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 slope_two\cf4 \strokec4  = \cf5 \strokec5 -2\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 x_vals\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 (\cf5 \strokec5 ax\cf4 \strokec4 .\cf6 \strokec6 get_xlim\cf4 \strokec4 ())\cb1 \
\cf5 \cb3 \strokec5 y_vals\cf4 \strokec4  = \cf5 \strokec5 intercept_two\cf4 \strokec4  + \cf5 \strokec5 slope_two\cf4 \strokec4  * \cf5 \strokec5 x_vals\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 plot\cf4 \strokec4 (\cf5 \strokec5 x_vals\cf4 \strokec4 , \cf5 \strokec5 y_vals\cf4 \strokec4 , \cf8 \strokec8 '-'\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 tight_layout\cf4 \strokec4 ()\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 show\cf4 \strokec4 ()\cb1 \
\
\'97\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 svm\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 SVC\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 graph\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4  = \cf5 \strokec5 SVC\cf4 \strokec4 (\cf5 \strokec5 kernel\cf4 \strokec4  = \cf8 \strokec8 'linear'\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 fit\cf4 \strokec4 (\cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \strokec4 ) \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf5 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 predict\cf4 \strokec4 ([[\cf5 \strokec5 3\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 ],[\cf5 \strokec5 6\cf4 \strokec4 , \cf5 \strokec5 7\cf4 \strokec4 ]]))\
\
\'97 \cf5 \strokec5 classifier\cf4 \strokec4  = \cf5 \strokec5 SVC\cf4 \strokec4 (\cf5 \strokec5 kernel\cf4 \strokec4 =\cf8 \strokec8 'linear'\cf4 \strokec4 , \cf5 \strokec5 C\cf4 \strokec4  = \cf5 \strokec5 0.1\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl560\sa240\partightenfactor0

\f2\fs35\fsmilli17600 \cf9 \cb4 \strokec9 SVMs have a parameter\'a0
\f3\fs21\fsmilli10800 \cf10 \cb11 \strokec10 C
\f2\fs35\fsmilli17600 \cf9 \cb4 \strokec9 \'a0that determines how much error the SVM will allow for. If\'a0
\f3\fs21\fsmilli10800 \cf10 \cb11 \strokec10 C
\f2\fs35\fsmilli17600 \cf9 \cb4 \strokec9 \'a0is large, then the SVM has a hard margin \'97 it won\'92t allow for many misclassifications, and as a result, the margin could be fairly small. If\'a0
\f3\fs21\fsmilli10800 \cf10 \cb11 \strokec10 C
\f2\fs35\fsmilli17600 \cf9 \cb4 \strokec9 \'a0is too large, the model runs the risk of overfitting. It relies too heavily on the training data, including the outliers.\
On the other hand, if\'a0
\f3\fs21\fsmilli10800 \cf10 \cb11 \strokec10 C
\f2\fs35\fsmilli17600 \cf9 \cb4 \strokec9 \'a0is small, the SVM has a soft margin. Some points might fall on the wrong side of the line, but the margin will be large. This is resistant to outliers, but if\'a0
\f3\fs21\fsmilli10800 \cf10 \cb11 \strokec10 C
\f2\fs35\fsmilli17600 \cf9 \cb4 \strokec9 \'a0gets too small, you run the risk of underfitting. The SVM will allow for so much error that the training data won\'92t be represented.\
\pard\pardeftab720\sl440\partightenfactor0

\f1\fs28\fsmilli14080 \cf4 \cb3 \strokec4 \
\
\'97\cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 codecademylib3_seaborn\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 svm\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 SVC\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 graph\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 model_selection\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 train_test_split\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 training_data\cf4 \strokec4 , \cf5 \strokec5 validation_data\cf4 \strokec4 , \cf5 \strokec5 training_labels\cf4 \strokec4 , \cf5 \strokec5 validation_labels\cf4 \strokec4  = \cf5 \strokec5 train_test_split\cf4 \strokec4 (\cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \strokec4 , \cf5 \strokec5 train_size\cf4 \strokec4  = \cf5 \strokec5 0.8\cf4 \strokec4 , \cf5 \strokec5 test_size\cf4 \strokec4  = \cf5 \strokec5 0.2\cf4 \strokec4 , \cf5 \strokec5 random_state\cf4 \strokec4  = \cf5 \strokec5 100\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4  = \cf5 \strokec5 SVC\cf4 \strokec4 (\cf5 \strokec5 kernel\cf4 \strokec4  = \cf8 \strokec8 'linear'\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 fit\cf4 \strokec4 (\cf5 \strokec5 training_data\cf4 \strokec4 , \cf5 \strokec5 training_labels\cf4 \strokec4 ) \cb1 \
\
\cb3 print(\cf5 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 score\cf4 \strokec4 (\cf5 \strokec5 validation_data\cf4 \strokec4 ,\cf5 \strokec5 validation_labels\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 # 0.43 cikti\
\
\'97\cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 codecademylib3_seaborn\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 svm\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 SVC\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 graph\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 model_selection\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 train_test_split\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 training_data\cf4 \strokec4 , \cf5 \strokec5 validation_data\cf4 \strokec4 , \cf5 \strokec5 training_labels\cf4 \strokec4 , \cf5 \strokec5 validation_labels\cf4 \strokec4  = \cf5 \strokec5 train_test_split\cf4 \strokec4 (\cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \strokec4 , \cf5 \strokec5 train_size\cf4 \strokec4  = \cf5 \strokec5 0.8\cf4 \strokec4 , \cf5 \strokec5 test_size\cf4 \strokec4  = \cf5 \strokec5 0.2\cf4 \strokec4 , \cf5 \strokec5 random_state\cf4 \strokec4  = \cf5 \strokec5 100\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4  = \cf5 \strokec5 SVC\cf4 \strokec4 (\cf5 \strokec5 kernel\cf4 \strokec4  = \cf8 \strokec8 'poly'\cf4 \strokec4 , \cf5 \strokec5 degree\cf4 \strokec4 =\cf5 \strokec5 2\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 fit\cf4 \strokec4 (\cf5 \strokec5 training_data\cf4 \strokec4 , \cf5 \strokec5 training_labels\cf4 \strokec4 ) \cb1 \
\
\cb3 print(\cf5 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 score\cf4 \strokec4 (\cf5 \strokec5 validation_data\cf4 \strokec4 ,\cf5 \strokec5 validation_labels\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 #1 cikti,  usttekine gore \'e7ok basarili!!!!!\
\
\'97\cf2 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 datasets\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 make_circles\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 svm\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 SVC\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 model_selection\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 train_test_split\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 \strokec7 #Makes concentric circles\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \strokec4  = \cf5 \strokec5 make_circles\cf4 \strokec4 (\cf5 \strokec5 n_samples\cf4 \strokec4 =\cf5 \strokec5 300\cf4 \strokec4 , \cf5 \strokec5 factor\cf4 \strokec4 =\cf5 \strokec5 .2\cf4 \strokec4 , \cf5 \strokec5 noise\cf4 \strokec4 =\cf5 \strokec5 .05\cf4 \strokec4 , \cf5 \strokec5 random_state\cf4 \strokec4  = \cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 \strokec7 #Makes training set and validation set.\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 training_data\cf4 \strokec4 , \cf5 \strokec5 validation_data\cf4 \strokec4 , \cf5 \strokec5 training_labels\cf4 \strokec4 , \cf5 \strokec5 validation_labels\cf4 \strokec4  = \cf5 \strokec5 train_test_split\cf4 \strokec4 (\cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \strokec4 , \cf5 \strokec5 train_size\cf4 \strokec4  = \cf5 \strokec5 0.8\cf4 \strokec4 , \cf5 \strokec5 test_size\cf4 \strokec4  = \cf5 \strokec5 0.2\cf4 \strokec4 , \cf5 \strokec5 random_state\cf4 \strokec4  = \cf5 \strokec5 100\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4  = \cf5 \strokec5 SVC\cf4 \strokec4 (\cf5 \strokec5 kernel\cf4 \strokec4  = \cf8 \strokec8 "linear"\cf4 \strokec4 , \cf5 \strokec5 random_state\cf4 \strokec4  = \cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 fit\cf4 \strokec4 (\cf5 \strokec5 training_data\cf4 \strokec4 , \cf5 \strokec5 training_labels\cf4 \strokec4 )\cb1 \
\cb3 print(\cf5 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 score\cf4 \strokec4 (\cf5 \strokec5 validation_data\cf4 \strokec4 , \cf5 \strokec5 validation_labels\cf4 \strokec4 ))\cb1 \
\cb3 print(\cf5 \strokec5 training_data\cf4 \strokec4 [\cf5 \strokec5 0\cf4 \strokec4 ])\cb1 \
\
\cf5 \cb3 \strokec5 new_training\cf4 \strokec4 =[]\cb1 \
\cf5 \cb3 \strokec5 new_validation\cf4 \strokec4 =[]\cb1 \
\cf2 \cb3 \strokec2 for\cf4 \strokec4  \cf5 \strokec5 point\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 training_data\cf4 \strokec4 :\cb1 \
\cb3   \cf5 \strokec5 new_training\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 ([\cf5 \strokec5 2\cf4 \strokec4  ** \cf5 \strokec5 0.5\cf4 \strokec4  * \cf5 \strokec5 point\cf4 \strokec4 [\cf5 \strokec5 0\cf4 \strokec4 ] * \cf5 \strokec5 point\cf4 \strokec4 [\cf5 \strokec5 1\cf4 \strokec4 ], \cf5 \strokec5 point\cf4 \strokec4 [\cf5 \strokec5 0\cf4 \strokec4 ] ** \cf5 \strokec5 2\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 [\cf5 \strokec5 1\cf4 \strokec4 ] ** \cf5 \strokec5 2\cf4 \strokec4 ])\cb1 \
\
\cf2 \cb3 \strokec2 for\cf4 \strokec4  \cf5 \strokec5 point\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 validation_data\cf4 \strokec4 :\cb1 \
\cb3   \cf5 \strokec5 new_validation\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 ([\cf5 \strokec5 2\cf4 \strokec4  ** \cf5 \strokec5 0.5\cf4 \strokec4  * \cf5 \strokec5 point\cf4 \strokec4 [\cf5 \strokec5 0\cf4 \strokec4 ] * \cf5 \strokec5 point\cf4 \strokec4 [\cf5 \strokec5 1\cf4 \strokec4 ], \cf5 \strokec5 point\cf4 \strokec4 [\cf5 \strokec5 0\cf4 \strokec4 ] ** \cf5 \strokec5 2\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 [\cf5 \strokec5 1\cf4 \strokec4 ] ** \cf5 \strokec5 2\cf4 \strokec4 ])\cb1 \
\
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 fit\cf4 \strokec4 (\cf5 \strokec5 new_training\cf4 \strokec4 , \cf5 \strokec5 training_labels\cf4 \strokec4 )\cb1 \
\cb3 print(\cf5 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 score\cf4 \strokec4 (\cf5 \strokec5 new_validation\cf4 \strokec4 , \cf5 \strokec5 validation_labels\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 \
\'97 \cf5 \strokec5 classifier\cf4 \strokec4  = \cf5 \strokec5 SVC\cf4 \strokec4 (\cf5 \strokec5 kernel\cf4 \strokec4  = \cf8 \strokec8 "rbf"\cf4 \strokec4 , \cf5 \strokec5 gamma\cf4 \strokec4  = \cf5 \strokec5 0.5\cf4 \strokec4 , \cf5 \strokec5 C\cf4 \strokec4  = \cf5 \strokec5 2\cf4 \strokec4 )\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 most\cf4 \strokec4  \cf5 \strokec5 commonly\cf4 \strokec4  \cf5 \strokec5 used\cf4 \strokec4  \cf5 \strokec5 kernel\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 SVMs\cf4 \strokec4  \cf2 \strokec2 is\cf4 \strokec4  \cf5 \strokec5 a\cf4 \strokec4  \cf5 \strokec5 radial\cf4 \strokec4  \cf5 \strokec5 basis\cf4 \strokec4  \cf5 \strokec5 function\cf4 \strokec4  (\cf5 \strokec5 rbf\cf4 \strokec4 ) \cf5 \strokec5 kernel\cf4 \strokec4 . \cf5 \strokec5 This\cf4 \strokec4  \cf2 \strokec2 is\cf4 \strokec4  \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 default\cf4 \strokec4  \cf5 \strokec5 kernel\cf4 \strokec4  \cf5 \strokec5 used\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 scikit\cf4 \strokec4 -\cf5 \strokec5 learn\'92s\cf4 \strokec4  \cf5 \strokec5 SVC\cf4 \strokec4  object. \cf5 \strokec5 If\cf4 \strokec4  \cf5 \strokec5 you\cf4 \strokec4  \cf5 \strokec5 don\'92t\cf4 \strokec4  \cf5 \strokec5 specifically\cf4 \strokec4  set \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 kernel\cf4 \strokec4  \cf5 \strokec5 to\cf4 \strokec4  \cf8 \strokec8 "linear"\cf4 \strokec4 , \cf8 \strokec8 "poly"\cf4 \strokec4  \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 SVC\cf4 \strokec4  object \cf5 \strokec5 will\cf4 \strokec4  \cf5 \strokec5 use\cf4 \strokec4  \cf5 \strokec5 an\cf4 \strokec4  \cf5 \strokec5 rbf\cf4 \strokec4  \cf5 \strokec5 kernel\cf4 \strokec4 . \cf5 \strokec5 If\cf4 \strokec4  \cf5 \strokec5 you\cf4 \strokec4  \cf5 \strokec5 want\cf4 \strokec4  \cf5 \strokec5 to\cf4 \strokec4  \cf5 \strokec5 be\cf4 \strokec4  \cf5 \strokec5 explicit\cf4 \strokec4 , \cf5 \strokec5 you\cf4 \strokec4  \cf5 \strokec5 can\cf4 \strokec4  set \cf5 \strokec5 kernel\cf4 \strokec4  = \cf8 \strokec8 "rbf"\cf4 \strokec4 , \cf5 \strokec5 although\cf4 \strokec4  \cf5 \strokec5 that\cf4 \strokec4  \cf2 \strokec2 is\cf4 \strokec4  \cf5 \strokec5 redundant\cf4 \strokec4 .\
\
\cf5 \strokec5 gamma\cf4 \strokec4  \cf2 \strokec2 is\cf4 \strokec4  \cf5 \strokec5 similar\cf4 \strokec4  \cf5 \strokec5 to\cf4 \strokec4  \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 C\cf4 \strokec4  \cf5 \strokec5 parameter\cf4 \strokec4 . \cf5 \strokec5 You\cf4 \strokec4  \cf5 \strokec5 can\cf4 \strokec4  \cf5 \strokec5 essentially\cf4 \strokec4  \cf5 \strokec5 tune\cf4 \strokec4  \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 model\cf4 \strokec4  \cf5 \strokec5 to\cf4 \strokec4  \cf5 \strokec5 be\cf4 \strokec4  \cf5 \strokec5 more\cf4 \strokec4  \cf2 \strokec2 or\cf4 \strokec4  \cf5 \strokec5 less\cf4 \strokec4  \cf5 \strokec5 sensitive\cf4 \strokec4  \cf5 \strokec5 to\cf4 \strokec4  \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 training\cf4 \strokec4  \cf5 \strokec5 data\cf4 \strokec4 . \cf5 \strokec5 A\cf4 \strokec4  \cf5 \strokec5 higher\cf4 \strokec4  \cf5 \strokec5 gamma\cf4 \strokec4 , \cf5 \strokec5 say\cf4 \strokec4  \cf5 \strokec5 100\cf4 \strokec4 , \cf5 \strokec5 will\cf4 \strokec4  \cf5 \strokec5 put\cf4 \strokec4  \cf5 \strokec5 more\cf4 \strokec4  \cf5 \strokec5 importance\cf4 \strokec4  \cf5 \strokec5 on\cf4 \strokec4  \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 training\cf4 \strokec4  \cf5 \strokec5 data\cf4 \strokec4  \cf2 \strokec2 and\cf4 \strokec4  \cf5 \strokec5 could\cf4 \strokec4  \cf5 \strokec5 result\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 overfitting\cf4 \strokec4 . \cf5 \strokec5 Conversely\cf4 \strokec4 , \cf5 \strokec5 A\cf4 \strokec4  \cf5 \strokec5 lower\cf4 \strokec4  \cf5 \strokec5 gamma\cf4 \strokec4  \cf5 \strokec5 like\cf4 \strokec4  \cf5 \strokec5 0.01\cf4 \strokec4  \cf5 \strokec5 makes\cf4 \strokec4  \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 points\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 the\cf4 \strokec4  \cf5 \strokec5 training\cf4 \strokec4  \cf5 \strokec5 data\cf4 \strokec4  \cf5 \strokec5 less\cf4 \strokec4  \cf5 \strokec5 relevant\cf4 \strokec4  \cf2 \strokec2 and\cf4 \strokec4  \cf5 \strokec5 can\cf4 \strokec4  \cf5 \strokec5 result\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 underfitting\cf4 \strokec4 .\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \'97\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 data\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 model_selection\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 train_test_split\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 svm\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 SVC\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 training_data\cf4 \strokec4 , \cf5 \strokec5 validation_data\cf4 \strokec4 , \cf5 \strokec5 training_labels\cf4 \strokec4 , \cf5 \strokec5 validation_labels\cf4 \strokec4  = \cf5 \strokec5 train_test_split\cf4 \strokec4 (\cf5 \strokec5 points\cf4 \strokec4 , \cf5 \strokec5 labels\cf4 \strokec4 , \cf5 \strokec5 train_size\cf4 \strokec4  = \cf5 \strokec5 0.8\cf4 \strokec4 , \cf5 \strokec5 test_size\cf4 \strokec4  = \cf5 \strokec5 0.2\cf4 \strokec4 , \cf5 \strokec5 random_state\cf4 \strokec4  = \cf5 \strokec5 100\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4  = \cf5 \strokec5 SVC\cf4 \strokec4 (\cf5 \strokec5 kernel\cf4 \strokec4  = \cf8 \strokec8 "rbf"\cf4 \strokec4 , \cf5 \strokec5 gamma\cf4 \strokec4  = \cf5 \strokec5 0.1\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 fit\cf4 \strokec4 (\cf5 \strokec5 training_data\cf4 \strokec4 ,\cf5 \strokec5 training_labels\cf4 \strokec4 )\cb1 \
\
\cb3 print(\cf5 \strokec5 classifier\cf4 \strokec4 .\cf6 \strokec6 score\cf4 \strokec4 (\cf5 \strokec5 validation_data\cf4 \strokec4 ,\cf5 \strokec5 validation_labels\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb1 \
}